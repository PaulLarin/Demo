<UserControl x:Class="TaskListCommander.View.TasksCommanderView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:TaskListCommander.View"
             xmlns:extensions="clr-namespace:TaskListCommander.AttachedProperties"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:componentmodel="clr-namespace:System.ComponentModel;assembly=WindowsBase"
             xmlns:converters="clr-namespace:TaskListCommander.Converters"
             mc:Ignorable="d" 
             Background="#FFEDEDED"             
             d:DesignHeight="600" d:DesignWidth="800">
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <converters:TaskNameAndStateToDescriptionConverter x:Key="TaskNameAndStateToDescriptionConverter"/>
        <SolidColorBrush x:Key="InfoBrush" Color="#BFBFBF"/>
        <SolidColorBrush x:Key="ActiveElementBackround" Color="#FF66C628"/>
        <SolidColorBrush x:Key="TaskDescriptionForeground" Color="Gray"/>

        <Style x:Key="ListViewTaskItemStyle" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Margin" Value="1"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Grid Background="White" Height="67">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="51"/>
                                <RowDefinition Height="12"/>
                            </Grid.RowDefinitions><Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="220*"/>
                                    <ColumnDefinition Width="90"/>
                                    <ColumnDefinition Width="55"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock VerticalAlignment="Center" FontSize="17" Margin="14 0 0 0" FontFamily="Verdana" FontWeight="Medium" Foreground="{DynamicResource TaskDescriptionForeground}" >
                                    <TextBlock.Text>
                                        <MultiBinding Converter="{StaticResource TaskNameAndStateToDescriptionConverter}" Mode="TwoWay">
                                            <Binding Path="Name" UpdateSourceTrigger="PropertyChanged"/>
                                            <Binding Path="State" UpdateSourceTrigger="PropertyChanged"/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                                <TextBlock Grid.Column="1" HorizontalAlignment="Left"  VerticalAlignment="Center" FontSize="17" FontFamily="Verdana" Foreground="{DynamicResource InfoBrush}">
                                    <Run Text="{Binding Progress, UpdateSourceTrigger=PropertyChanged}"/>
                                    <Run Text="%"/>
                                </TextBlock>
                                <Button Grid.Column="2" Visibility="{Binding CanBeRemoved, Converter={StaticResource BooleanToVisibilityConverter}}"
                                        Command="{Binding TasksCommanderViewModel.RemoveTaskCommand, Mode=OneWay, Source={StaticResource Locator}}" 
                                        CommandParameter="{Binding}"
                                        Style="{DynamicResource RemoveButtonStyle}"/>
                            </Grid>
                            <ProgressBar Grid.Row="1" Height="5" Margin="14 0 14 0" Foreground="{StaticResource ActiveElementBackround}" VerticalAlignment="Top" BorderThickness="0" Value="{Binding Progress, UpdateSourceTrigger=PropertyChanged}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <CollectionViewSource x:Key="TasksItemsSource" Source="{Binding Tasks, UpdateSourceTrigger=PropertyChanged}"
                          IsLiveSortingRequested="True">
            <CollectionViewSource.LiveSortingProperties>
                <system:String>Progress</system:String>
            </CollectionViewSource.LiveSortingProperties>
            <CollectionViewSource.SortDescriptions>
                <componentmodel:SortDescription PropertyName="Progress" />
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="RemoveButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid x:Name="container" Background="Transparent" Cursor="Hand">
                            <Ellipse x:Name="ellipse" Width="28" Height="28" Stroke="{StaticResource InfoBrush}"  StrokeThickness="1"/>
                            <Line x:Name="lineA"  Width="14" Height="14" X1="0" X2="15" Y1="0" Y2="14" Stroke="{StaticResource InfoBrush}" StrokeThickness="1"/>
                            <Line x:Name="lineB"  Width="14" Height="14" X1="15" X2="0" Y1="0" Y2="14" Stroke="{StaticResource InfoBrush}" StrokeThickness="1"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger SourceName="container" Property="IsMouseOver" Value="true">
                                <Setter Property="Opacity" TargetName="container" Value="0.8"/>
                                <Setter Property="Stroke" TargetName="ellipse" Value="{StaticResource Button.MouseOver.Border}"/>
                                <Setter Property="Stroke" TargetName="lineA" Value="{StaticResource Button.MouseOver.Border}"/>
                                <Setter Property="Stroke" TargetName="lineB" Value="{StaticResource Button.MouseOver.Border}"/>
                                
                                <!--<Setter Property="StrokeThickness" TargetName="ellipse" Value="2"/>
                                <Setter Property="StrokeThickness" TargetName="lineA" Value="2"/>
                                <Setter Property="StrokeThickness" TargetName="lineB" Value="2"/>-->
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Opacity" TargetName="container" Value="0.7"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="container" Value="0.4"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="68"/>
            <RowDefinition Height="22*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="400*"/>
            <ColumnDefinition Width="265"/>
        </Grid.ColumnDefinitions>
        <Rectangle  Grid.Column="1" Grid.RowSpan="2" Fill="#494949"></Rectangle>
        <Label Margin="10 0 0 0" VerticalAlignment="Center" Style="{StaticResource GroupLabelStyle}">СПИСОК ЗАДАЧ:</Label>
        <Label Margin="20 0 0 0" VerticalAlignment="Center" Style="{StaticResource GroupLabelStyle}" Grid.Column="1" Foreground="#FFEDEDED" FontStretch="ExtraExpanded">СОЗДАНИЕ ЗАДАЧИ:</Label>
        <Rectangle Height="2" VerticalAlignment="Bottom" Grid.ColumnSpan="2" Fill="#338D8D8D"/>
        <ScrollViewer Grid.Column="0" Grid.Row="1" 
                      BorderThickness="0"
                      VerticalScrollBarVisibility="Visible" 
                      HorizontalAlignment="Stretch" 
                      HorizontalContentAlignment="Stretch"
                      Template="{DynamicResource ScrollViewerControlTemplate}">
            <ListBox Margin="10" BorderThickness="0" 
                     HorizontalAlignment="Stretch" 
                     ItemsSource="{Binding Source={StaticResource TasksItemsSource}}" 
                     Background="Transparent"
                     ItemContainerStyle="{DynamicResource ListViewTaskItemStyle}">
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel></StackPanel>
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
            </ListBox>
        </ScrollViewer>
        <StackPanel Grid.Column="1" Grid.Row="1" Margin="26 0 26 0">
            <StackPanel.Resources>
                <Style TargetType="Label" BasedOn="{StaticResource ParameterLabelStyle}">
                    <Setter   Property="Foreground" Value="#FFA3A3A3"/>
                    <Setter Property="Margin" Value="0 8 0 2"/>
                </Style>
                <Style TargetType="TextBox" BasedOn="{StaticResource InputBoxStyle}">
                    <Setter Property="Margin" Value="0 3 0 8"/>
                </Style>
            </StackPanel.Resources>
            <DockPanel>
                <Label DockPanel.Dock="Top">Название:</Label>
                <TextBox extensions:TextBoxExtended.Placeholder="назв. задачи" Text="{Binding NewTaskName, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" FontSize="13">
                    <extensions:AdditionalContent.RightContent>
                        <Button Content="R" Width="50" Command="{Binding GenerateRandomTaskNameCommand}"/>
                    </extensions:AdditionalContent.RightContent>
                </TextBox>
            </DockPanel>
            <DockPanel>
                <Label DockPanel.Dock="Top">Длительность:</Label>
                <TextBox extensions:TextBoxExtended.Placeholder="время, с" Text="{Binding NewTaskDuration, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" FontSize="13">
                    <extensions:AdditionalContent.RightContent>
                        <Button Content="R" Width="50" Command="{Binding GenerateRandomTaskDurationCommand}"/>
                    </extensions:AdditionalContent.RightContent>
                </TextBox>
            </DockPanel>
            <Button Margin="0 7 0 0" Command="{Binding AddNewTaskCommand, UpdateSourceTrigger=PropertyChanged}" 
                    IsEnabled="{Binding IsTaskAddingEnabled, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" 
                    IsDefault="True" Style="{DynamicResource ButtonStyle}">ДОБАВИТЬ</Button>
        </StackPanel>
    </Grid>
</UserControl>
